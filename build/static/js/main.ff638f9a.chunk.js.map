{"version":3,"sources":["Form/FormM.module.css","Copyright/CopyrightM.module.css","Preview/PreviewM.module.css","Button/Button.js","Form/Form.js","Preview/Preview.js","Copyright/Copyright.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","props","className","Form","autoBind","e","color","target","value","this","changeColor","changeTextColor","FormM","wrapper","inputBlock","autoComplete","inputForm","onChange","name","url","saveImgBase","imgUrl","imgError","text","header","headerFits","description","textFits","colors","chooseColor","type","list","onChangeColor","onChangeTextColor","buttons","id","onClick","print","saveAsHtml","saveAsJson","React","Component","Preview","createRef","descriptionToCheck","png","headerToCheck","getRef","bind","current","offsetHeight","onTextLayoutChange","onHeaderLayoutChange","console","log","href","PreviewM","linkWrapper","style","backgroundImage","backgroundColor","ref","Copyright","CopyrightM","copyright","App","state","buttonIndex","base64Url","preview","setState","preventDefault","domElement","html2canvas","useCORS","then","canvas","saveAsPng","toDataURL","uri","filename","link","document","createElement","download","body","appendChild","click","removeChild","window","open","Swal","fire","position","icon","title","showConfirmButton","timer","printDocument","ctx","getContext","base_image","Image","crossOrigin","src","onload","width","height","drawImage","append","pngUrl","onerror","successful","htmlDiv","classList","add","innerText","getSelection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","err","error","data","json","JSON","stringify","copyText","getElementById","innerHTML","handleEdit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ff638f9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FormM_wrapper__18Lax\",\"inputBlock\":\"FormM_inputBlock__14fA3\",\"buttons\":\"FormM_buttons__2NCEX\",\"inputForm\":\"FormM_inputForm__o6JBb\",\"text\":\"FormM_text__1tnGk\",\"color\":\"FormM_color___rsvv\",\"chooseColor\":\"FormM_chooseColor__Cc8uF\",\"colors\":\"FormM_colors__3Vb5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copyright\":\"CopyrightM_copyright__2x4vw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PreviewM_wrapper__2fhrr\",\"text\":\"PreviewM_text__1FdzG\",\"header\":\"PreviewM_header__3hCL0\",\"description\":\"PreviewM_description__2YxTq\",\"descriptionToCheck\":\"PreviewM_descriptionToCheck__3FoiJ\",\"headerToCheck\":\"PreviewM_headerToCheck__OhmzI\",\"linkWrapper\":\"PreviewM_linkWrapper__2-Fog\"};","import React from \"react\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport \"./PlainCssButtonDeep.css\";\n\nexport default function Button(props) {\n  return (\n    <div>\n      <MaterialButton className=\"button\" {...props}></MaterialButton>\n    </div>\n  );\n}\n","import React from 'react';\nimport autoBind from \"react-autobind\";\nimport FormM from \"./FormM.module.css\";\nimport Button from \"../Button/Button\";\n\nexport class Form extends React.Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n  }\n\n  onChangeColor(e) {\n    var color = e.target.value;\n    this.props.changeColor(color);\n  }\n\n  onChangeTextColor(e) {\n    var color = e.target.value;\n    this.props.changeTextColor(color);\n  }\n\n  render() {\n    return (\n      <div className={FormM.wrapper}>\n        <form className={FormM.inputBlock} autoComplete=\"off\">\n        <label>Insert the link that leads to the banner</label>\n          <input\n            className={FormM.inputForm}\n            onChange={this.props.onChange}\n            name=\"url\"\n            value={this.props.url}\n            >\n          </input>\n          <label>Insert the link that leads to the picture or dataURI</label>\n          <input\n            className={FormM.inputForm}\n            onChange={this.props.saveImgBase}\n            value={this.props.imgUrl}\n            name=\"imgUrl\"\n          ></input>\n          {this.props.imgError && (\n            <div className={FormM.text}>\n              This image'll be shown but won't be saved because of CORS.\n            </div>\n          )}\n          <label>Header</label>\n          <input\n            className={FormM.inputForm}\n            onChange={this.props.onChange}\n            value={this.props.header}\n            name=\"header\"\n          ></input>\n          {!this.props.headerFits && (\n            <div className={FormM.text}>Too long text</div>\n          )}\n          <label>Text</label>\n          <textarea\n            className={FormM.inputForm}\n            onChange={this.props.onChange}\n            value={this.props.description}\n            name=\"description\"\n          ></textarea>\n          {!this.props.textFits && (\n            <div className={FormM.text}>Too long text</div>\n          )}\n          <div className={FormM.colors}>\n            <div className={FormM.chooseColor}>\n              Pick background <br></br>color\n            </div>\n            <input\n              className={FormM.color}\n              type=\"color\"\n              list=\"colorList\"\n              onChange={this.onChangeColor}\n            />\n            <div className={FormM.chooseColor}>\n              Pick text <br></br>color\n            </div>\n            <input\n              className={FormM.color}\n              type=\"color\"\n              list=\"colorList\"\n              onChange={this.onChangeTextColor}\n            />\n          </div>\n        </form>\n        <div className={FormM.buttons}>\n          <Button type=\"button\" id=\"png\" onClick={this.props.print}>\n            Save as PNG\n          </Button>\n          <Button type=\"button\" id=\"html\" onClick={this.props.saveAsHtml}>\n            Save as HTML\n          </Button>\n          <Button type=\"button\" id=\"json\" onClick={this.props.saveAsJson}>\n            Save as JSON\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PreviewM from \"./PreviewM.module.css\";\n\nexport class Preview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.description = React.createRef();\n    this.descriptionToCheck = React.createRef();\n    this.png = React.createRef();\n    this.header = React.createRef();\n    this.headerToCheck = React.createRef();\n    this.getRef = this.getRef.bind(this);\n  }\n\n  componentDidMount() {\n    if (\n      this.description.current.offsetHeight !==\n      this.descriptionToCheck.current.offsetHeight\n    ) {\n      this.props.onTextLayoutChange(false);\n    } else {\n      this.props.onTextLayoutChange(true);\n    }\n    if (\n      this.header.current.offsetHeight !==\n      this.headerToCheck.current.offsetHeight\n    ) {\n      this.props.onHeaderLayoutChange(false);\n    } else {\n      this.props.onHeaderLayoutChange(true);\n    }\n  }\n\n  componentDidUpdate() {\n    if (\n      this.description.current.offsetHeight !==\n      this.descriptionToCheck.current.offsetHeight\n    ) {\n      this.props.onTextLayoutChange(false);\n    } else {\n      this.props.onTextLayoutChange(true);\n    }\n    if (\n      this.header.current.offsetHeight !==\n      this.headerToCheck.current.offsetHeight\n    ) {\n      this.props.onHeaderLayoutChange(false);\n    } else {\n      this.props.onHeaderLayoutChange(true);\n    }\n  }\n\n  getRef() {\n    return this.png.current;\n  }\n\n  render() {\n    console.log(this.png.current);\n    return (\n      <a\n        href={this.props.url}\n        target=\"_blank\"\n        className={PreviewM.linkWrapper}\n        id=\"linkBanner\"\n      >\n        <div\n          className={PreviewM.wrapper}\n          id=\"img\"\n          style={{\n            backgroundImage: `url(${this.props.imgUrl})`,\n            backgroundColor: this.props.backgroundColor,\n          }}\n          ref={this.png}\n        >\n          <div className={PreviewM.text}>\n            <div\n              className={PreviewM.header}\n              ref={this.header}\n              style={{\n                color: this.props.color,\n              }}\n            >\n              {this.props.header}\n            </div>\n            <div\n              className={`${PreviewM.header} ${PreviewM.headerToCheck}`}\n              ref={this.headerToCheck}\n            >\n              {this.props.header}\n            </div>\n            <div\n              className={PreviewM.description}\n              value={this.props.description}\n              ref={this.description}\n              style={{\n                color: this.props.color,\n              }}\n            >\n              {this.props.description}\n            </div>\n            <div\n              className={`${PreviewM.description} ${PreviewM.descriptionToCheck}`}\n              ref={this.descriptionToCheck}\n            >\n              {this.props.description}\n            </div>\n          </div>\n        </div>\n      </a>\n    );\n  }\n}\n","import React from \"react\";\nimport CopyrightM from \"./CopyrightM.module.css\";\n\nexport const Copyright = () => {\n  return (\n    <div className={CopyrightM.copyright}>\n      <div>© Ostrovskaya Alexandra</div>\n      <div>Special for Avito</div>\n      <div>Unit VAS</div>\n      <div>2020</div>\n    </div>\n  );\n};\n","import * as html2canvas from \"html2canvas\";\nimport Swal from \"sweetalert2\";\nimport autoBind from \"react-autobind\";\nimport React from \"react\";\n\nimport { Form } from \"./Form/Form\";\nimport { Preview } from \"./Preview/Preview\";\nimport { Copyright } from \"./Copyright/Copyright\";\n\nimport \"./App.css\";\nimport { ThemeProvider } from \"@material-ui/core\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"https://www.avito.ru/moskva\",\n      header: \"Sample header\",\n      description: \"Sample text Sample text Sample text Sample text\",\n      buttonIndex: \"\",\n      imgUrl:\n        \"https://upload.wikimedia.org/wikipedia/commons/4/47/PNG_transparency_demonstration_1.png\",\n      base64Url: \"\",\n      imgError: false,\n      textFits: true,\n      headerFits: true,\n      backgroundColor: \"\",\n      color: \"\",\n    };\n\n    this.preview = React.createRef();\n\n    autoBind(this);\n  }\n\n  changeTextColor(color) {\n    this.setState({\n      color,\n    });\n  }\n\n  changeColor(backgroundColor) {\n    this.setState({\n      backgroundColor,\n    });\n  }\n\n  onChange(e) {\n    let name = e.target.name;\n    this.setState({\n      [name]: e.target.value,\n    });\n  }\n\n  handleEdit(e) {\n    e.preventDefault();\n    this.setState({\n      buttonIndex: e.target.id,\n    });\n  }\n\n  onTextLayoutChange(textFits) {\n    if (this.state.textFits !== textFits) {\n      this.setState({\n        textFits: textFits,\n      });\n    }\n  }\n\n  onHeaderLayoutChange(headerFits) {\n    if (this.state.headerFits !== headerFits) {\n      this.setState({\n        headerFits: headerFits,\n      });\n    }\n  }\n\n  printDocument(domElement) {\n    html2canvas(domElement, { useCORS: true }).then((canvas) => {\n      this.saveAsPng(canvas.toDataURL(), \"banner.png\");\n    });\n  }\n\n  saveAsPng(uri, filename) {\n    if (this.state.textFits && this.state.headerFits) {\n      var link = document.createElement(\"a\");\n      if (typeof link.download === \"string\") {\n        link.href = uri;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        window.open(uri);\n      }\n    } else {\n      Swal.fire({\n        position: \"top\",\n        icon: \"warning\",\n        title: `Unable to save PNG (too long text)`,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n  }\n\n  print() {\n    this.printDocument(this.preview.current.getRef());\n  }\n\n  saveImgBase(e) {\n    this.setState({\n      imgError: false,\n    });\n    var canvas = document.createElement(\"canvas\");\n    var ctx = canvas.getContext(\"2d\");\n\n    var base_image = new Image();\n    base_image.crossOrigin = \"anonymous\";\n    base_image.src = e.target.value;\n    base_image.onload = () => {\n      canvas.width = base_image.width;\n      canvas.height = base_image.height;\n      ctx.drawImage(base_image, 0, 0);\n      document.body.append(canvas);\n      var pngUrl = canvas.toDataURL();\n      this.setState({\n        base64Url: pngUrl,\n      });\n    };\n\n    base_image.onerror = () => {\n      this.setState({\n        imgError: true,\n        base64Url: e.target.value,\n      });\n    };\n\n    this.setState({\n      imgUrl: e.target.value,\n    });\n  }\n\n  copyText(text, type) {\n    var title;\n    var successful;\n\n    if (this.state.textFits && this.state.headerFits) {\n      var htmlDiv = document.createElement(\"div\");\n      htmlDiv.classList.add(\"copyDiv\");\n      document.body.append(htmlDiv);\n      htmlDiv.innerText = text;\n\n      window.getSelection().removeAllRanges();\n      var range = document.createRange();\n      range.selectNodeContents(htmlDiv);\n      window.getSelection().addRange(range);\n      console.log(text, htmlDiv);\n\n      try {\n        successful = document.execCommand(\"copy\");\n      } catch (err) {\n        console.error(err);\n        successful = false;\n      }\n\n      if (!successful) {\n        console.error(\"failed to copy!\");\n      }\n\n      document.body.removeChild(htmlDiv);\n      window.getSelection().removeAllRanges();\n\n      title = successful\n        ? `${type} coppied successfully`\n        : `${type} coppied unsuccessfully`;\n    } else {\n      successful = false;\n      title = \"Too long text\";\n    }\n\n    Swal.fire({\n      position: \"top\",\n      icon: successful ? \"success\" : \"warning\",\n      title,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n\n  saveAsJson() {\n    var data = {\n      href: this.state.url,\n      header: this.state.header,\n      description: this.state.description,\n      imgUrl: this.state.imgUrl,\n      backgroundColor: this.state.backgroundColor,\n      color: this.state.color,\n    };\n    var json = JSON.stringify(data);\n    this.copyText(json, \"JSON\");\n  }\n\n  saveAsHtml() {\n    var preview = document.getElementById(\"preview\");\n\n    this.copyText(preview.innerHTML, \"HTML\");\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main-block\">\n          <Form\n            value={this.state.header}\n            onChange={this.onChange}\n            saveImgBase={this.saveImgBase}\n            handleEdit={this.handleEdit}\n            buttonIndex={this.state.buttonIndex}\n            header={this.state.header}\n            description={this.state.description}\n            url={this.state.url}\n            imgUrl={this.state.imgUrl}\n            textFits={this.state.textFits}\n            headerFits={this.state.headerFits}\n            printDocument={this.printDocument}\n            print={this.print}\n            saveAsHtml={this.saveAsHtml}\n            changeColor={this.changeColor}\n            changeTextColor={this.changeTextColor}\n            saveAsJson={this.saveAsJson}\n            imgError={this.state.imgError}\n          />\n          <div id=\"preview\">\n            <Preview\n              onChange={this.onChange}\n              header={this.state.header}\n              description={this.state.description}\n              url={this.state.url}\n              imgUrl={this.state.base64Url || this.state.imgUrl}\n              onTextLayoutChange={this.onTextLayoutChange}\n              onHeaderLayoutChange={this.onHeaderLayoutChange}\n              printDocument={this.printDocument}\n              ref={this.preview}\n              changeColor={this.changeColor}\n              backgroundColor={this.state.backgroundColor}\n              color={this.state.color}\n            />\n          </div>\n        </div>\n        <Copyright />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}